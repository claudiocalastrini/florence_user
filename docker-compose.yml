services:
  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: csv_postgres
    environment:
      POSTGRES_DB: csv_app
      POSTGRES_USER: csv_user
      POSTGRES_PASSWORD: csv_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - csv_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U csv_user -d csv_app"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Applicazione Java
  csv_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: csv_java_app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/csv_app
      - SPRING_DATASOURCE_USERNAME=csv_user
      - SPRING_DATASOURCE_PASSWORD=csv_password
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - csv_network
    restart: unless-stopped

 

volumes:
  postgres_data:
    driver: local
 
networks:
  csv_network:
    driver: bridge